[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\My_Projects\iCON_HV_FirmwareV1\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/9] Building C object esp-idf/Relay_Control/CMakeFiles/__idf_Relay_Control.dir/Relay_Control.c.obj
C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/components/Relay_Control/Relay_Control.c:80:1: warning: ignoring attribute 'section (".iram1.1")' because it conflicts with previous 'section (".iram1.0")' [-Wattributes]
   80 | {
      | ^
In file included from C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/components/Relay_Control/Relay_Control.c:11:
C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/components/Relay_Control/include/Relay_Control.h:60:16: note: previous declaration here
   60 | void IRAM_ATTR alert_isr_handler();
      |                ^~~~~~~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/components/Relay_Control/Relay_Control.c:29:13: warning: 'sundown_flag' defined but not used [-Wunused-variable]
   29 | static bool sundown_flag = false;
      |             ^~~~~~~~~~~~
C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/components/Relay_Control/Relay_Control.c:28:13: warning: 'sunup_flag' defined but not used [-Wunused-variable]
   28 | static bool sunup_flag = false;
      |             ^~~~~~~~~~
[3/9] Linking C static library esp-idf\Relay_Control\libRelay_Control.a
[4/9] Linking C static library esp-idf\Server_buffer\libServer_buffer.a
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable app-template.elf
[8/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/build/app-template.bin
[9/9] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.2\My_Projects\iCON_HV_FirmwareV1\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/build/partition_table/partition-table.bin C:/Espressif/frameworks/esp-idf-v5.2.2/My_Projects/iCON_HV_FirmwareV1/build/app-template.bin"
app-template.bin binary size 0x109ab0 bytes. Smallest app partition is 0x140000 bytes. 0x36550 bytes (17%) free.
